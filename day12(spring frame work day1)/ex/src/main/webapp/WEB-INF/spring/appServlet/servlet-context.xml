<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- web.xml에 DispatcherServlet 으로 통해 왔다.  -->
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- Controller에 의해 return이되서 온곳 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- Resolver 는 jsp 만 처리할수있다. WEB-INF에오는건 jsp만와야한다. -->
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<!-- prefix 앞, suffix 뒤 
	[[[	"/WEB-INF/views/home.jsp" ]]] 만약홈이리턴이된다면 이렇게 붙여진다 앞과뒤가. 그래서 /를 경로설정할때 붙이면안된다.
	 -->
	
	<context:component-scan base-package="himedia.spring.ver1" />
	<!-- component에 해당이되는걸 scan하는데 base-package(기본패키지)에 있는걸 스캔할거다. -->
	
	
	
</beans:beans>
